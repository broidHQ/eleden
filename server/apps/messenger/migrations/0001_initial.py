# Generated by Django 3.2.12 on 2022-02-16 07:36

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.messenger.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttachedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.FileField(help_text='Путь к файлу', max_length=1024, upload_to=apps.messenger.models.af_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата добавления файла')),
                ('user', models.ForeignKey(help_text='Добавивший файл', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=128, null=True)),
                ('avatar', models.ImageField(default=None, help_text='Аватар', max_length=1024, null=True, upload_to='storage/messages/avatars')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата изменения')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст сообщения')),
                ('pinned', models.BooleanField(default=False, help_text='Закреплено ли сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата изменения')),
                ('forwarded', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), help_text='Пересылаемые сообщения', null=True, size=None)),
                ('attached_files', models.ManyToManyField(help_text='Прикрепленные файлы', to='messenger.AttachedFile')),
                ('user', models.ForeignKey(help_text='Автор сообщения', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveIntegerField(choices=[(0, 'participant'), (1, 'administrator')], default=0, help_text='Роль пользователя')),
                ('notification', models.BooleanField(default=True, help_text='Уведомлять о сообщениях')),
                ('favorite', models.BooleanField(default=False, help_text='Избранный чат')),
                ('excluded', models.BooleanField(default=False, help_text='Исключен ли пользователь из чата')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата изменения')),
                ('chat', models.ForeignKey(help_text='Чат', on_delete=django.db.models.deletion.CASCADE, to='messenger.chat')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'unique_together': {('chat', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered', models.DateTimeField(default=None, help_text='Сообщение доставлено', null=True)),
                ('read', models.DateTimeField(default=None, help_text='Сообщение прочитано', null=True)),
                ('favorite', models.BooleanField(default=False, help_text='Избранное сообщение')),
                ('deleted', models.BooleanField(default=False, help_text='Сообщение удалено')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('chat', models.ForeignKey(help_text='Чат', on_delete=django.db.models.deletion.CASCADE, to='messenger.chat')),
                ('message', models.ForeignKey(help_text='Сообщения', on_delete=django.db.models.deletion.CASCADE, to='messenger.message')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'unique_together': {('chat', 'message', 'user')},
            },
        ),
        migrations.AddField(
            model_name='chat',
            name='messages',
            field=models.ManyToManyField(help_text='Сообщения', through='messenger.ChatMessage', to='messenger.Message'),
        ),
        migrations.AddField(
            model_name='chat',
            name='user',
            field=models.ForeignKey(help_text='Организатор чата', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chat',
            name='users',
            field=models.ManyToManyField(help_text='Пользователи', through='messenger.Member', to=settings.AUTH_USER_MODEL),
        ),
    ]
