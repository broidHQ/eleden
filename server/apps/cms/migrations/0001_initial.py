# Generated by Django 3.2.12 on 2022-03-30 01:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Canvas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('width', models.CharField(help_text='Ширина', max_length=16)),
                ('height', models.CharField(help_text='Высота', max_length=16)),
                ('margin_top', models.CharField(default='0', help_text='Внешний отступ сверху', max_length=16)),
                ('margin_right', models.CharField(default='0', help_text='Внешний отступ справа', max_length=16)),
                ('margin_bottom', models.CharField(default='0', help_text='Внешний отступ снизу', max_length=16)),
                ('margin_left', models.CharField(default='0', help_text='Внешний отступ слева', max_length=16)),
                ('padding_top', models.CharField(default='0', help_text='Поле сверху', max_length=16)),
                ('padding_right', models.CharField(default='0', help_text='Поле справа', max_length=16)),
                ('padding_bottom', models.CharField(default='0', help_text='Поле снизу', max_length=16)),
                ('padding_left', models.CharField(default='0', help_text='Поле слева', max_length=16)),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('avatar', models.FileField(default=None, help_text='Аватар', null=True, upload_to='storage/cms/category/avatars/')),
                ('text', models.CharField(help_text='Текст', max_length=1024)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция вывода')),
                ('parent', models.ForeignKey(help_text='Родительская категория', null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.category')),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Grid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('width', models.CharField(help_text='Ширина', max_length=16)),
                ('height', models.CharField(help_text='Высота', max_length=16)),
                ('margin_top', models.CharField(default='0', help_text='Внешний отступ сверху', max_length=16)),
                ('margin_right', models.CharField(default='0', help_text='Внешний отступ справа', max_length=16)),
                ('margin_bottom', models.CharField(default='0', help_text='Внешний отступ снизу', max_length=16)),
                ('margin_left', models.CharField(default='0', help_text='Внешний отступ слева', max_length=16)),
                ('padding_top', models.CharField(default='0', help_text='Поле сверху', max_length=16)),
                ('padding_right', models.CharField(default='0', help_text='Поле справа', max_length=16)),
                ('padding_bottom', models.CharField(default='0', help_text='Поле снизу', max_length=16)),
                ('padding_left', models.CharField(default='0', help_text='Поле слева', max_length=16)),
                ('template_columns', models.JSONField(help_text='Шаблоны столбцов для разных размеров экрана', null=True)),
                ('template_rows', models.JSONField(help_text='Шаблоны строк для разных размеров экрана', null=True)),
                ('column_gap', models.JSONField(help_text='Промежуток между столбцами для разных размеров экрана', null=True)),
                ('row_gap', models.JSONField(help_text='Промежуток между строками для разных размеров экрана', null=True)),
                ('justify_content', models.JSONField(help_text='Выравнивание вдоль горизонтальной оси для разных размеров экрана', null=True)),
                ('align_content', models.JSONField(help_text='Выравнивание вдоль вертикальной оси для разных размеров экрана', null=True)),
                ('justify_items', models.JSONField(help_text='Выравнивание вдоль горизонтальной оси для разных размеров экрана', null=True)),
                ('align_items', models.JSONField(help_text='Выравнивание вдоль вертикальной оси внутри ячейки для разных размеров экрана', null=True)),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StackPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('width', models.CharField(help_text='Ширина', max_length=16)),
                ('height', models.CharField(help_text='Высота', max_length=16)),
                ('margin_top', models.CharField(default='0', help_text='Внешний отступ сверху', max_length=16)),
                ('margin_right', models.CharField(default='0', help_text='Внешний отступ справа', max_length=16)),
                ('margin_bottom', models.CharField(default='0', help_text='Внешний отступ снизу', max_length=16)),
                ('margin_left', models.CharField(default='0', help_text='Внешний отступ слева', max_length=16)),
                ('padding_top', models.CharField(default='0', help_text='Поле сверху', max_length=16)),
                ('padding_right', models.CharField(default='0', help_text='Поле справа', max_length=16)),
                ('padding_bottom', models.CharField(default='0', help_text='Поле снизу', max_length=16)),
                ('padding_left', models.CharField(default='0', help_text='Поле слева', max_length=16)),
                ('orientation', models.PositiveSmallIntegerField(choices=[(0, 'horizontal'), (1, 'vertical')], default=0, help_text='Ориентация')),
                ('line_length', models.PositiveSmallIntegerField(default=12, help_text='Число элементов в одной линии')),
                ('justify_content', models.JSONField(help_text='Выравнивание вдоль главной оси для разных размеров экрана', null=True)),
                ('align_items', models.JSONField(help_text='Выравнивание вдоль поперечной оси для разных размеров экрана', null=True)),
                ('align_content', models.JSONField(help_text='Выравнивание вдоль поперечной оси при наличии свободного пространства для разных размеров экрана', null=True)),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('name', models.CharField(help_text='Название', max_length=256)),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='StackPanelElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('content_id', models.PositiveIntegerField(help_text='Идентификатор содержимого')),
                ('padding_top', models.CharField(default='0', help_text='Поле сверху', max_length=16)),
                ('padding_right', models.CharField(default='0', help_text='Поле справа', max_length=16)),
                ('padding_bottom', models.CharField(default='0', help_text='Поле снизу', max_length=16)),
                ('padding_left', models.CharField(default='0', help_text='Поле слева', max_length=16)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция вывода')),
                ('align_self', models.JSONField(help_text='Переопределение выравнивания вдоль поперечной оси для разных размеров экрана', null=True)),
                ('offset', models.JSONField(help_text='Смещение вдоль главной оси для разных размеров экрана', null=True)),
                ('content_type', models.ForeignKey(help_text='Модель содержимого', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('stack_panel', models.ForeignKey(help_text='Контейнер на основе Flexbox', on_delete=django.db.models.deletion.CASCADE, to='cms.stackpanel')),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('text', models.TextField(help_text='Текст')),
                ('kind', models.PositiveIntegerField(choices=[(0, 'text'), (1, 'gallery'), (2, 'files'), (3, 'profiles'), (4, 'slider'), (5, 'form'), (6, 'jupyter'), (7, 'dataset')], default=0, help_text='Тип')),
                ('payload', models.JSONField(help_text='Дополнительные данные', null=True)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция')),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('title', models.CharField(help_text='Заголовок', max_length=1024)),
                ('avatar', models.FileField(help_text='Аватар', null=True, upload_to='storage/cms/page/avatars/')),
                ('views', models.PositiveIntegerField(default=0, help_text='Количество просмотров')),
                ('hide', models.BooleanField(default=False, help_text='Скрываем ли страницу')),
                ('priority', models.BooleanField(default=False, help_text='Приоритет')),
                ('kind', models.PositiveIntegerField(choices=[(0, 'regular'), (1, 'main')], default=0, help_text='Тип страницы')),
                ('category', models.ForeignKey(help_text='Категория', null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.category')),
                ('tags', models.ManyToManyField(help_text='Теги на странице', to='cms.Tag')),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-priority', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='GridElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.PositiveIntegerField(help_text='Идентификатор содержимого')),
                ('grid_column', models.CharField(default='0', help_text='Занимаемые столбцы', max_length=16)),
                ('grid_row', models.CharField(default='0', help_text='Занимаемые строки', max_length=16)),
                ('justify_self', models.JSONField(help_text='Выравнивание вдоль горизонтальной оси для разных размеров экрана', null=True)),
                ('align_self', models.JSONField(help_text='Выравнивание вдоль вертикальной оси внутри ячейки для разных размеров экрана', null=True)),
                ('content_type', models.ForeignKey(help_text='Модель содержимого', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('grid', models.ForeignKey(help_text='Контейнер на основе Grid Layout', on_delete=django.db.models.deletion.CASCADE, to='cms.grid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CanvasElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.PositiveIntegerField(help_text='Идентификатор содержимого')),
                ('left', models.CharField(default='0', help_text='Отступ от левого края', max_length=16)),
                ('top', models.CharField(default='0', help_text='Отступ от верхнего края', max_length=16)),
                ('right', models.CharField(help_text='Отступ от правого края', max_length=16)),
                ('bottom', models.CharField(help_text='Отступ от нижнего края', max_length=16)),
                ('z_index', models.IntegerField(help_text='Порядок наложения в третьем измерении', null=True)),
                ('canvas', models.ForeignKey(help_text='Контейнер на основе абсолютного позиционирования', on_delete=django.db.models.deletion.CASCADE, to='cms.canvas')),
                ('content_type', models.ForeignKey(help_text='Модель содержимого', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('content_id', models.PositiveIntegerField(help_text='Идентификатор содержимого')),
                ('width', models.CharField(help_text='Ширина', max_length=16)),
                ('height', models.CharField(help_text='Высота', max_length=16)),
                ('margin_top', models.CharField(default='0', help_text='Внешний отступ сверху', max_length=16)),
                ('margin_right', models.CharField(default='0', help_text='Внешний отступ справа', max_length=16)),
                ('margin_bottom', models.CharField(default='0', help_text='Внешний отступ снизу', max_length=16)),
                ('margin_left', models.CharField(default='0', help_text='Внешний отступ слева', max_length=16)),
                ('padding_top', models.CharField(default='0', help_text='Поле сверху', max_length=16)),
                ('padding_right', models.CharField(default='0', help_text='Поле справа', max_length=16)),
                ('padding_bottom', models.CharField(default='0', help_text='Поле снизу', max_length=16)),
                ('padding_left', models.CharField(default='0', help_text='Поле слева', max_length=16)),
                ('is_adaptive', models.BooleanField(default=False, help_text='Является ли ширина адаптивной под экран пользователя')),
                ('has_parallax', models.BooleanField(default=False, help_text='Показывать параллакс или нет')),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция вывода')),
                ('content_type', models.ForeignKey(help_text='Модель содержимого', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('page', models.ForeignKey(help_text='Страница', on_delete=django.db.models.deletion.CASCADE, to='cms.page')),
                ('user', models.ForeignKey(help_text='Создавший пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
